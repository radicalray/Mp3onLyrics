{
  "name": "Youtubemp3withlyricsautotagging",
  "tagline": "Download mp3 + lyrics without knowing the name of the song - just by typing the lyrics or youtube url",
  "body": "# Youtubemp3withlyricsautotagging\r\nDownload mp3 without knowing the name of the song - just by typing the lyrics or the youtube url\r\n\r\nThis program will also automatically search for the **Lyrics** of the song online then download the lyrics for the song and add then embed *Lyrics* to the *mp3* file via *eyed3* Tagger. All songs lyrics fetched in one go!\r\n\r\nAlso, will automatically trim silences in the beginning and end of the song\r\n\r\n\r\nJust download the scipt and run my typing \r\n\r\n```\r\npython music.py \r\n```\r\n\r\n## Auto Tagger Module\r\nAlso includes an [auto-tagger](https://github.com/yask123/Auto-MP3-Lyrics-Tagger)\r\n\r\nThis will attempt to automatically tag the song with the proper artist/title from the title.\r\n\r\nThe following things takes place\r\n\r\n* Reads the name of all *.mp3 files , stores the name in a list\r\n* Iterating through each song name , send a get request at `Google.com` with the query `song_name Lyrics`\r\n* Looks if the Lyrics Page (Metrolyrics or Azlyrics) is available\r\n    * If present , scrape the lyrics\r\n    * Uses Arc90 algorithm (behind readability) to pull out the lyrics from html pages to fight against anti-parsing techniques used on lyrics webpages. =)\r\n\r\n\r\nHappy Downloading!\r\n\r\n\r\n\r\n### Dependencies:\r\n\r\n* `sudo pip install --upgrade youtube_dl`\r\n* `$ sudo pip install eyed3`\r\n* libav ---- `brew install libav` \r\n* sox ----- `brew install sox` or `sudo apt-get install sox`\r\n* `$ sudo pip install BeautifulSoup4`\r\n* `sudo apt-get install -y libav-tools`\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}